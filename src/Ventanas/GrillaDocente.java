/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Ventana2.java
 *
 * Created on 26-oct-2013, 9:26:17
 */

package Ventanas;


import Clases.Docente;
import Clases.CargoDocente;
import Abstracta.BD;
import Listas.ListaDocentes;
import com.mysql.jdbc.ResultSetMetaData;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Marcos
 */
public class GrillaDocente extends javax.swing.JInternalFrame {
    private Docente Docente;
    private ListaDocentes lista;
    DefaultTableModel model;

    /** Creates new form Ventana2 */
    public GrillaDocente() {
        Docente = new Docente();
        initComponents();
        mostrar();   
        txtDocenteId.setVisible(false);
     //   jPanelModificacion.setVisible(false);
        jPanelModificacionCargoDocente.setVisible(false);
        txtCargoDocenteId.setVisible(false);
        txtCargo.setVisible(false);
        try {
            Connection con = BD.getConnection();
            Statement stmt = con.createStatement();
            
            ResultSet rs = stmt.executeQuery("select AsignaturaId,nombre from Asignatura");
            while (rs.next()) {
                String aux = String.valueOf(rs.getString(1)+" - "+rs.getString(2));
                jAsignatura.addItem(aux);  
            }
            
            ResultSet rs3 = stmt.executeQuery("select CargoId,nombre from Cargo");
            //jCargo.removeAllItems();
            while (rs3.next()) {
                String aux1 = String.valueOf(rs3.getString(1)+" - "+rs3.getString(2));
                jCargo.addItem(aux1);
            }
            
           /* rs.close();
            rs3.close();
            stmt.close();
            con.close();*/
        } catch (Exception error) {
            System.out.println(error);
        }
    

        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDatosDocente = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtCargoDocente = new javax.swing.JTable();
        txtDocenteId = new javax.swing.JTextField();
        txtCargo = new javax.swing.JTextField();
        btnAgregar2 = new javax.swing.JButton();
        btnEliminar3 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        txtc = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnModificar1 = new javax.swing.JButton();
        btnEliminar1 = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jPanelModificacionCargoDocente = new javax.swing.JPanel();
        txtc4 = new javax.swing.JTextField();
        jCargo = new javax.swing.JComboBox();
        btnAgregarCargo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jNivel = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jAsignatura = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtCargoDocenteId = new javax.swing.JTextField();

        setBorder(null);
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Gestion de Docentes");

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtDatosDocente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Legajo", "Nombre", "Fecha", "Condicion", "Observacion"
            }
        ));
        jtDatosDocente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDatosDocenteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtDatosDocente);

        jtCargoDocente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Asignatura", "Categoria", "Condicion"
            }
        ));
        jtCargoDocente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCargoDocenteMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtCargoDocente);

        txtDocenteId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocenteIdActionPerformed(evt);
            }
        });

        txtCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCargoActionPerformed(evt);
            }
        });

        btnAgregar2.setText("Agregar");
        btnAgregar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregar2ActionPerformed(evt);
            }
        });

        btnEliminar3.setText("Eliminar");
        btnEliminar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btnAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDocenteId, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDocenteId, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcKeyTyped(evt);
            }
        });

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/New.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Edit.png"))); // NOI18N
        btnModificar1.setText("Modificar");
        btnModificar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnModificar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificar1ActionPerformed(evt);
            }
        });

        btnEliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Delete.png"))); // NOI18N
        btnEliminar1.setText("Eliminar");
        btnEliminar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnEliminar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar1ActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Salir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar1)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnSalir)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelModificacionCargoDocente.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtc4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtc4KeyTyped(evt);
            }
        });

        jCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCargoActionPerformed(evt);
            }
        });

        btnAgregarCargo.setText("Modificar");
        btnAgregarCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCargoActionPerformed(evt);
            }
        });

        jLabel1.setText("Nivel");

        jNivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        jNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNivelActionPerformed(evt);
            }
        });

        jLabel2.setText("Asignatura");

        jLabel3.setText("Cargo");

        txtCargoDocenteId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCargoDocenteIdActionPerformed(evt);
            }
        });
        txtCargoDocenteId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCargoDocenteIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCargoDocenteIdKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelModificacionCargoDocenteLayout = new javax.swing.GroupLayout(jPanelModificacionCargoDocente);
        jPanelModificacionCargoDocente.setLayout(jPanelModificacionCargoDocenteLayout);
        jPanelModificacionCargoDocenteLayout.setHorizontalGroup(
            jPanelModificacionCargoDocenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModificacionCargoDocenteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtCargoDocenteId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addGroup(jPanelModificacionCargoDocenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelModificacionCargoDocenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addComponent(btnAgregarCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanelModificacionCargoDocenteLayout.setVerticalGroup(
            jPanelModificacionCargoDocenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModificacionCargoDocenteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtCargoDocenteId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
            .addGroup(jPanelModificacionCargoDocenteLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanelModificacionCargoDocenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelModificacionCargoDocenteLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanelModificacionCargoDocenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelModificacionCargoDocenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelModificacionCargoDocenteLayout.createSequentialGroup()
                        .addGroup(jPanelModificacionCargoDocenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanelModificacionCargoDocenteLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnAgregarCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelModificacionCargoDocente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelModificacionCargoDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnModificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificar1ActionPerformed
    ModificarDocente md = new ModificarDocente();
    md.setVisible(true);
     
    int fila;
    fila=this.jtDatosDocente.getSelectedRow();
    if(fila>=0 )
    {
      //  jPanelModificacion.setVisible(true);
        Docente d= new Docente();
        d.setDocenteId(Integer.parseInt(txtDocenteId.getText()));
   /*         if(d.buscarDocenteId()){
                txtCodigo.setText(""+d.getLegajo());
                txtn.setText(d.getNombre());
                txte.setText(""+d.getEmail());
                txto.setText(""+d.getObservacion());
               
            }
     */                
    }else
        {
         JOptionPane.showMessageDialog(null,"No selecciono ningun docente");
        }

    }//GEN-LAST:event_btnModificar1ActionPerformed

    private void btnEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar1ActionPerformed
    int fila;
    fila=this.jtDatosDocente.getSelectedRow();
    if(fila>=0 )
    {
     Docente d = new Docente();
     d.setDocenteId(Integer.parseInt(txtDocenteId.getText()));
     d.bajas();
     CargoDocente cd = new CargoDocente();
     cd.setDocenteId(Integer.parseInt(txtDocenteId.getText()));
     cd.bajas();
     JOptionPane.showMessageDialog(this, "La eliminacion se realizo exitosamente");
     mostrar();                
     reiniciar(jtCargoDocente);
    }else
        {
         JOptionPane.showMessageDialog(null,"No selecciono ningun docente");
        }
     
    }//GEN-LAST:event_btnEliminar1ActionPerformed

    private void txtcKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcKeyTyped
        char c = evt.getKeyChar();
        if(c<'0' || c>'9')evt.consume();
    }//GEN-LAST:event_txtcKeyTyped

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
    NuevoDocente nd = new NuevoDocente();
    nd.setVisible(true);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void jtDatosDocenteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDatosDocenteMouseClicked
    int codigo=Integer.parseInt(String.valueOf(jtDatosDocente.getModel().getValueAt(jtDatosDocente.getSelectedRow(), 0)));
        try {
                  Docente d=Docente.buscarDocenteCodigo(codigo);
            
            txtDocenteId.setText(String.valueOf(d.getDocenteId()));
            buscar();
            } catch (Exception ex) {
            System.out.println("Error Al Seleccionar Elemento:" + ex.getMessage());
        }
   
    }//GEN-LAST:event_jtDatosDocenteMouseClicked

    private void txtDocenteIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocenteIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocenteIdActionPerformed

    private void jtCargoDocenteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCargoDocenteMouseClicked
    int codigo=Integer.parseInt(String.valueOf(jtCargoDocente.getModel().getValueAt(jtCargoDocente.getSelectedRow(), 0)));
        try {
                 // Docente d=Docente.buscarDocenteCodigo(codigo);
            
            txtCargo.setText(String.valueOf(codigo));
            
            } catch (Exception ex) {
            System.out.println("Error Al Seleccionar Elemento:" + ex.getMessage());
        }
    }//GEN-LAST:event_jtCargoDocenteMouseClicked

    private void txtCargoDocenteIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCargoDocenteIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCargoDocenteIdActionPerformed

    private void txtCargoDocenteIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCargoDocenteIdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCargoDocenteIdKeyReleased

    private void txtCargoDocenteIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCargoDocenteIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCargoDocenteIdKeyTyped

    private void txtc4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtc4KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtc4KeyTyped

    private void txtCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCargoActionPerformed

    private void jCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCargoActionPerformed
        /*try {

            Connection con3 = BD.getConnection();
            Statement stmt3 = con3.createStatement();
            ResultSet rs3 = stmt3.executeQuery("select CargoId,nombre from Cargo");
            jCargo.removeAllItems();
            while (rs3.next()) {
                String aux = String.valueOf(rs3.getString(1)+" - "+rs3.getString(2));
                jCargo.addItem(aux);
            }
            rs3.close();
            stmt3.close();
            con3.close();
        } catch (Exception error) {
            System.out.println(error);
        }
        */
    }//GEN-LAST:event_jCargoActionPerformed

    private void btnAgregarCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCargoActionPerformed

        try {
            Connection cn = BD.getConnection();
            Statement stmt = cn.createStatement();
            ResultSet rs1 = stmt.executeQuery("select max(CargoDocenteId) from Cargo_has_docente");
            while (rs1.next()) {
                txtCargoDocenteId.setText(String.valueOf(rs1.getInt(1)+1));
            }

            if(txtCargoDocenteId.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Ingrese un Codigo para Grabar");
            }
            else{
                int DocenteId =Integer.parseInt(txtDocenteId.getText());

                String asig =String.valueOf(jAsignatura.getModel().getSelectedItem());
                String numero="";
                for (int i = 0; i < asig.length(); i++) {
                    if (Character.isDigit(asig.charAt(i))) {
                        numero=numero+asig.charAt(i);
                    }
                }
                System.out.println("numeros: " + numero);
                int auxA;
                auxA = Integer.parseInt(numero);
                String c = String.valueOf(jCargo.getModel().getSelectedItem());
                String numero2="";
                for (int i = 0; i < c.length(); i++) {
                    if (Character.isDigit(c.charAt(i))) {
                        numero2=numero2+c.charAt(i);
                    }
                }
                System.out.println("numeros2: " + numero2);
                int auxC;
                auxC = Integer.parseInt(numero2);

                int CargoDocenteId =Integer.parseInt( txtCargoDocenteId.getText());
                CargoDocente cd= new CargoDocente();
                cd.setCargoDocenteId(CargoDocenteId);
                System.out.println("CargodocenteID "+CargoDocenteId);
                cd.setDocenteId(DocenteId);
                System.out.println("DocenteId "+DocenteId);
                cd.setAsignaturaId(auxA);
                System.out.println("AsignaturaId "+auxA);
                cd.setCargoId(auxC);
                System.out.println("CargoId "+auxC);
                cd.altas();
                buscar();
                JOptionPane.showMessageDialog(null,"Un nuevo Cargo Docente ha sido Registrado");

            }
        } catch( Exception ex){
            System.out.println(ex +"asdasd");

        }

        /*try {
            Connection cn = BD.getConnection();
            Statement stmt = cn.createStatement();
            ResultSet rs = stmt.executeQuery("select max(CargoDocenteId) from Cargo_has_docente");
            while (rs.next()) {
                txtc1.setText(String.valueOf(rs.getInt(1)+1));
            }
            rs.close();
            stmt.close();
            cn.close();
            if(txtc1.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Ingrese un Codigo para Grabar");
            }
            else{
                int CargoDocenteId =Integer.parseInt( txtc1.getText());
                int DocenteId = Integer.parseInt(txtc.getText());
                String asig = (String) jAsignatura.getSelectedItem();
                int asignatura = Integer.parseInt(asig);
                String c = (String) jCargo.getSelectedItem();
                int cargo = Integer.parseInt(c);

                CargoDocente cd= new CargoDocente();
                cd.setCargoDocenteId(CargoDocenteId);
                cd.setDocenteId(DocenteId);
                cd.setAsignaturaId(asignatura);
                cd.setCargoId(cargo);
                cd.altas();
                JOptionPane.showMessageDialog(null,"Un nuevo Docente ha sido Registrado");

                //txtNom.setText("");
                //txtc.setText("");

            }
        } catch( Exception ex){

            JOptionPane.showMessageDialog(null, "No se pudo cargar nuevo docente");

        } */       // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarCargoActionPerformed

    private void jNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNivelActionPerformed
        try {

            Connection con = BD.getConnection();
            Statement stmt = con.createStatement();
            String ni = (String) jNivel.getSelectedItem();
            int nivel =Integer.parseInt(ni);
            ResultSet rs = stmt.executeQuery("select AsignaturaId,nombre from Asignatura where nivel="+nivel);
            jAsignatura.removeAllItems();
            while (rs.next()) {
                String aux = String.valueOf(rs.getString(1)+" - "+rs.getString(2));
                jAsignatura.addItem(aux);
            }

        } catch (Exception error) {
            System.out.println(error);
        }
    }//GEN-LAST:event_jNivelActionPerformed

    private void btnAgregar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregar2ActionPerformed
    jPanelModificacionCargoDocente.setVisible(true);     
    }//GEN-LAST:event_btnAgregar2ActionPerformed

    private void btnEliminar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar3ActionPerformed
    int fila;
    fila=this.jtCargoDocente.getSelectedRow();
    if(fila>=0 )
    {
     
     CargoDocente cd = new CargoDocente();
     cd.setDocenteId(Integer.parseInt(txtDocenteId.getText()));
     cd.bajas();
     JOptionPane.showMessageDialog(this, "La eliminacion se realizo exitosamente");
     mostrar();                
     reiniciar(jtCargoDocente);
    }else
        {
         JOptionPane.showMessageDialog(null,"No selecciono ningun docente");
        }
     
    }//GEN-LAST:event_btnEliminar3ActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregar2;
    private javax.swing.JButton btnAgregarCargo;
    private javax.swing.JButton btnEliminar1;
    private javax.swing.JButton btnEliminar3;
    private javax.swing.JButton btnModificar1;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox jAsignatura;
    private javax.swing.JComboBox jCargo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox jNivel;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelModificacionCargoDocente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jtCargoDocente;
    public static javax.swing.JTable jtDatosDocente;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtCargoDocenteId;
    public static javax.swing.JTextField txtDocenteId;
    private javax.swing.JTextField txtc;
    private javax.swing.JTextField txtc4;
    // End of variables declaration//GEN-END:variables
  void mostrar() {
         try{
            ListaDocentes lista = new ListaDocentes(Docente.leer());
            DefaultTableModel info=new DefaultTableModel();
           
            info.addColumn("Legajo");
            info.addColumn("Nombre");
            info.addColumn("Email");
            info.addColumn("Fecha");
            info.addColumn("Condicion");
            info.addColumn("Observacion");
             
            for(int i=0; i<lista.getListaDocente().size();i++){
               Object[]fila=new Object[]{
              
               lista.getListaDocente().get(i).getLegajo(),    
               lista.getListaDocente().get(i).getNombre(),
               lista.getListaDocente().get(i).getEmail(),
               lista.getListaDocente().get(i).getFecha(),
               lista.getListaDocente().get(i).getCondicion(),
               lista.getListaDocente().get(i).getObservacion()
               };
               info.addRow(fila);
            }
               jtDatosDocente.setModel(info);
        }catch(Exception a){
            a.printStackTrace();
        }

    }
 private void filtrar() {
     try{
        Docente c = new Docente();
        ListaDocentes lista = new ListaDocentes(Docente.filtrar());
        DefaultTableModel info=new DefaultTableModel();
        info.addColumn("DocenteId");
             info.addColumn("Legajo");
             info.addColumn("Nombre");
             info.addColumn("Fecha");
             info.addColumn("Condicion");
        Docente.setDocenteId(Integer.parseInt(txtc.getText()));
        if(Docente.buscar())
            for(int i=0; i<lista.getListaDocente().size();i++){
                Object[]fila=new Object[]{
                lista.getListaDocente().get(i).getDocenteId(),
                lista.getListaDocente().get(i).getLegajo(),    
                lista.getListaDocente().get(i).getNombre(),
                lista.getListaDocente().get(i).getFecha(),
                lista.getListaDocente().get(i).getCondicion()
        };
            info.addRow(fila);
          }
            jtDatosDocente.setModel(info);
    }catch(Exception a){
      a.printStackTrace();
      }
  }
   public void buscar(){
     try{
        DefaultTableModel info=new DefaultTableModel();
        this.jtCargoDocente.setModel(info);
        Connection cn = BD.getConnection();
        Statement stmt = cn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT cd.CargoDocenteId,a.Nivel,a.Nombre,d.Condicion,c.Nombre FROM mydb.Cargo_has_docente cd inner join mydb.asignatura a on cd.Asignatura_AsignaturaId=a.AsignaturaId inner join mydb.docente d on d.DocenteId=cd.Docente_DocenteId inner join mydb.Cargo c on c.CargoId=cd.Cargo_CargoId where cd.Docente_DocenteId="+txtDocenteId.getText());
      
       
        //Obteniendo la informacion de las columnas que estan siendo consultadas
        ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
        //La cantidad de columnas que tiene la consulta
        int cantidadColumnas = rsMd.getColumnCount();
        //Establecer como cabezeras el nombre de las colimnas
        for (int i = 1; i <= cantidadColumnas; i++) {
        info.addColumn(rsMd.getColumnLabel(i));
        }
        //Creando las filas para el JTable
        while (rs.next()) {
        Object[] fila = new Object[cantidadColumnas];
        for (int i = 0; i < cantidadColumnas; i++) {
         fila[i]=rs.getObject(i+1);
        }
        info.addRow(fila);
        
        }
        rs.close();
        cn.close();
        }
        catch (Exception ex) {
             ex.printStackTrace();
        }   
    }
public static void reiniciar(javax.swing.JTable jtCargoDocente){
DefaultTableModel modelo = (DefaultTableModel) jtCargoDocente.getModel();
while(modelo.getRowCount()>0)
    modelo.removeRow(0);
    TableColumnModel modCol = jtCargoDocente.getColumnModel();
    while(modCol.getColumnCount()>0)modCol.removeColumn(modCol.getColumn(0));
}
 
}
